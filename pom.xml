<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <modules>
    <module>eureka-server</module>
    <module>serice-feign</module>
    <module>service-hi</module>
    <module>service-ribbon</module>
    <module>service-zuul</module>
    <module>system</module>
    <module>config-server</module>
    <module>api-gateway</module>
    <module>data-source</module>

  </modules>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com</groupId>
  <artifactId>springcloud</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>springcloud</name>
  <description>Demo project for Spring Boot</description>

  <!--少了 config  bus   gateway服务  方志鹏博客 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <spring-cloud.version>Hoxton.SR3</spring-cloud.version>
    <fastjson.version>1.2.83</fastjson.version>
    <commons-collections>4.1</commons-collections>
    <swagger.version>2.8.0</swagger.version>
    <docker.image.prefix>lgr</docker.image.prefix>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${commons-collections}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${swagger.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${swagger.version}</version>
    </dependency>
    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-all</artifactId>
      <version>4.1.20</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <dependencies>
          <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>javax.activation-api</artifactId>
            <version>1.2.0</version>
            <scope>compile</scope>
          </dependency>
        </dependencies>
        <configuration>
          <!-- docker远程地址 开通远程访问-->
          <dockerHost>http://115.28.138.45:2375</dockerHost>
          <!--镜像名称以及版本号-->
          <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
          <imageTags>
            <!--默认标签-->
            <imageTag>latest</imageTag>
          </imageTags>
          <!--依赖的基础镜像-->
          <baseImage>java</baseImage>
          <!-- Dockerfile的位置  服务太多暂时不用-->
          <!--<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->

          <!-- 这里是复制 jar 包到 docker 容器指定目录配置-->
          <workdir>/tmp</workdir>
          <entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>
          <resources>
            <resource>
              <targetPath>/tmp</targetPath>
              <!--用于指定需要复制的根目录 ${project.build.directory}表示为target目录 -->
              <directory>${project.build.directory}</directory>
              <!--用于指定需要复制的文件 ${project.build.directory}.jar表示为打包后jar文件 -->
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
<!--       打包时候自动build -->
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--打包时跳过测试类-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
